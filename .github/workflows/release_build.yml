name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create SSL certificate and key
        run: |
          mkdir -p ./ssl/private
          echo "${{ secrets.TEST_SSL_KEY }}" > ./ssl/private/leaf.key
          echo "${{ secrets.TEST_SSL_CERT }}" > ./ssl/private/chain.cer

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22' # Specify the Node.js version

      - name: Start the application
        env:
          SSL_KEY: ./ssl/private/leaf.key
          SSL_CERT: ./ssl/private/chain.cer
          USESSL: true
        run: npm start &

      - name: Wait for the application to start
        run: sleep 10 # Wait for 10 seconds to ensure the app is running

      - name: Test POST request with curl
        run: |
          POST_BODY='{"message":"Hello, World!"}''
          RESPONSE=$(curl -k -X POST https://localhost:443/ \
            -H "Content-Type: application/json" \
            --data "$POST_BODY")
          echo "Response: $RESPONSE"
          EXPECTED_RESPONSE='{"method":"POST","url":"/","clientIP":"::1","headers":{"host":"localhost","user-agent":"curl/8.5.0","accept":"*/*","content-type":"application/json","content-length":"27"}}'
          if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then
            echo "Test failed: Response does not match POST body"
            exit 1
          fi

      - name: Stop the application (SSL)
        run: kill $(lsof -t -i:443) || true # Stop the application running on port 443

      # Test with USESSL=false (HTTP on port 80)
      - name: Start the application without SSL
        env:
          USESSL: false
        run: npm start & # Start the application in the background

      - name: Wait for the application to start (No SSL)
        run: sleep 10 # Wait for 10 seconds to ensure the app is running

      - name: Test POST request with curl (HTTP)
        run: |
          POST_BODY='{"message":"Hello, World!"}'
          RESPONSE=$(curl -X POST http://localhost:80/ \
            -H "Content-Type: application/json" \
            --data "$POST_BODY")
          echo "Response: $RESPONSE"
          EXPECTED_RESPONSE='{"method":"POST","url":"/","clientIP":"::1","headers":{"host":"localhost","user-agent":"curl/8.5.0","accept":"*/*","content-type":"application/json","content-length":"27"}}'
          if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then
            echo "Test failed: Response does not match POST body (No SSL)"
            exit 1
          fi

      - name: Stop the application (No SSL)
        run: kill $(lsof -t -i:80) || true # Stop the application running on port 80


      - name: Set lower case org name
        id: org-name
        run: echo "ORG_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ env.ORG_LC }}/headers-app:latest .

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ env.ORG_LC }}/headers-app:latest
